[{"title":"为Blog增加Disqus评论系统","url":"/2021/04/05/blog-disqus/","content":"\n折腾博客的时候有添加评论系统的想法，实验之后还是将其下线，原因如下：\n\n1. 影响美观\n2. 拖慢页面加载进度（有解决办法，会在下文贴出）\n3. 使用并不方便，评论者需要有Google，Twitter，Facebook，或者Disqus账号\n4. 在国内支持度很差，需要科学上网（有折中方法，会在下文贴出）\n\n&nbsp;&nbsp;\n\n综上，我最后还是下线了这个功能。Blog的美观清爽对我来说才是最重要的，以下为折腾的过程：\n\n[为hexo增加Disqus评论功能](https://havincy.github.io/blog/post/AddDisqusInHexo/)\n\n[使Disqus不再拖累性能和页面加载(Lazyload)](https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/)\n\n[优化Disqus使其对墙内的支持更佳](https://blog.skk.moe/post/disqusjs/)\n\n&nbsp;&nbsp;\n\n感谢提供教程的大佬们：[Sukka](https://blog.skk.moe/)，[NEW NUY](https://havincy.github.io/blog/)\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n***\n\n","tags":["教程","talkings"],"categories":["Blog相关"]},{"title":"Hexo 使代码块支持Dark模式","url":"/2021/04/04/blog-DarkmodeForCode/","content":"\n我使用的Chic主题对于dark模式有很好的支持，但对于代码块并没有支持。\n\n感谢[starkshaw](https://github.com/starkshaw)提供的解决办法。\n\n\n\n打开`/themes/Chic/source/css/custom.styl`并在里面添加如下代码即可：\n\n```stylus\n// Dark mode for pre\n.dark-theme .post-content figure,\n.dark-theme .post-content figure.highlight .code pre {\n    background-color: $dark-post-blockquote-background-color;\n    color: $dark-mode-pre-foreground-color;\n}\n\n// Dark mode for pre line number\n.dark-theme .post-content figure.highlight .gutter pre {\n    background-color: $dark-post-blockquote-background-color;\n    color: $dark-mode-pre-line-number-foreground-color;\n}\n```\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n***\n\n","tags":["教程"],"categories":["Blog相关"]},{"title":"Hexo 为博客添加搜索功能","url":"/2021/04/04/blog-search/","content":"\n目前Blog的内容虽然不多，但以后会慢慢更新。\n\n虽然Categories和Tags已经是不错的筛选文章的工具，但还是没有搜索功能来的方便。\n\n\n\n在网上找到了关于我这个theme的搜索工具，这里放上教程链接：\n\n[原帖](https://zhou-bill.github.io/2020/07/09/hexo自定义/)\n\n原帖中有不少错误，虽然作者在评论区做了更正，但看起来不够方便，感谢Jackie的整理：\n\n[整理后的教程](https://maojinyuan.github.io/2020/07/25/20200725Hexo建站工具贴3_Chow%20Bill搜索功能/)\n\n\n\n不得不提到，这个搜索目前还有样式问题，在移动端打开时，点击搜索icon展开搜索栏的时候，Menu字样会被搜索栏吞掉一半，不够美观。我翻遍评论区也没有可行的办法，折腾了一下午无果。大佬的搜索在移动端是没问题的， [Chow_Bill](https://zhou-bill.github.io/)，但我在网络上没有搜索到解决的办法，大佬也没有更新教程。\n\n会持续关注，如果有解决方案会更新到这里。\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n***\n\n","tags":["教程","转载"],"categories":["Blog相关"]},{"title":"Hexo 添加文章字数和阅读时长","url":"/2021/04/03/blog-wordCounting_and_readingTime/","content":"\n\n\nHexo添加文章字数和阅读时长，我觉得不是必要的，但确实是一个可以优化的方面。\n\n自从搭建了这个Blog，就总想折腾它，加一些有的没的小功能，慢慢让它更好。\n\n\n\n我是个挺在意细节的人，也是个不想和别人处处一样的人，这就解释了我为什么没选择next的主题-实在太多人用了。有好有坏吧，好处就是这个主题足够优秀，打磨的很棒，相关文档和教程也很多很全，不好的地方，就是我不想和大家都一样吧，同时也缺少了一点折腾的乐趣。我特别怕麻烦，总觉得事情特别多，但真没事了，又闲不下来，很矛盾。\n\n\n\n这是教程正好爬到，也正好就是对应我的这个主题，挺棒。看了这个教程作者的履历，真的很强，希望有一天也可以这样吧。\n\n\n\n言归正传，这个教程适合绝大多数的hexo博客，可能需要稍作更改，贴上原文地址：[Hexo 添加文章字数和阅读时长](https://www.foxerlee.top/2020/02/17/wordcount/)\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n***\n\n","tags":["教程","talkings","转载"],"categories":["talkings","Blog相关"]},{"title":"Java基础-文件的读写","url":"/2021/04/03/java-fileIO/","content":"\n\n\n### Before\n\n本文用到的IDE为IntelliJ IDEA，也会介绍无包管理存在的情况下的应对方案\n\n\n\n在开始readfile前，需要把目标文件放入相应目录：\n\n![](https://raw.githubusercontent.com/Robert1124/image/master/PicGo/%E6%88%AA%E5%B1%8F2021-04-03%20%E4%B8%8B%E5%8D%8812.47.03.png)\n\n在IntelliJ IDEA的环境下，或任何自动生成`/src`文件夹的IDE里，应该将目标文件（此处为`events.txt`）放在与`/src`文件夹平级的目录中\n\n对于不自动生成`/src`文件夹的IDE，将目标文件放置于`*.java`文件平级的目录即可\n\n### Readfile\n\n此处对于readfile操作，介绍简单的Scanner实现方式（并非唯一方式，也并非最优方式，只是方便初学者记忆的方式）\n\n首先引入Scanner包（下列二者选一皆可，建议选第二种，可以同时引入File相关的Exception，方便后面做try-catch block）：\n\n```java\n//只引入Scanner包和File包\nimport java.util.Scanner;\nimport java.io.File;\n//引入整个util包（包含Scanner）和整个io包（包含File）\nimport java.util.*;\nimport java.io.*;\n```\n\n新建File和Scanner对象：\n\n```java\nFile file = new File(fileName);//此处fileName替换为需要引入的fileName，在本例中为\"events.txt\"\nScanner readFile = new Scanner(file);\n```\n\n通过while-loop逐行读取文件内容：\n\n```java\nwhile(readFile.hasNext()){//通过.hasNext()方法判断文件是否已经读取完整\n  /*\n  \t直接将文件当前一整行保存在名为line的string里\n  \t此处将line申明在while-loop内和外皆可，但建议申明在内\n  */\n  String line = readFile.nextLine();\n  /*\n  \t将内容存在line之后可对line自由进行下一步操作\n  \t常见的操作为：\n  \t\t1.string的split方法：String[] line_arr = line.split(regex);\n  \t\t  string.split()方法会将一个string从regex表示的内容分割开按顺序保存在一个array里\n  \t\t  regex为regular expression，即正则表达式，具体语法请善用搜索\n  \t\t2.Integer.parseInt()或Double.parseDouble()，将读取到的string转换为int或double\n  */\n}\n```\n\n在while-loop之后，记得要close scanner：\n\n```java\nreadFile.close();//现在很多编译器例如IntelliJ IDEA可以省略此句，但从语法和代码完整性角度建议保留\n```\n\n完整代码：\n\n```java\nimport java.util.*;\nimport java.io.*;\n\npublic class className{\n  public readFile(String fileName){\n    /*\n    \t如果此方法没有参数的话，新建file对象时的括号内需要填写完整的fileName\n    \t如File file = new File(\"events.txt\");\n    */\n    File file = new File(fileName);\n\t\tScanner readFile = new Scanner(file);\n    \n    while(readFile.hasNext()){\n      String line = readFile.nextLine();\n      /*\n      \t...\n      */\n    }\n    \n    readFile.close();\n  }\n}\n```\n\n**上面介绍的为最基础的写法（对Exception没有处理，不建议），此处提供一个包含try-catch block的常规写法：**\n\n```java\nimport java.util.*;\nimport java.io.*;\n\npublic class className{\n  public void readFile(String fileName){\n    File file = new File(fileName);\n\t\tScanner readFile = null;\n    \n    try{\n      readFile = new Scanner(file);\n    }catch(FileNotFoundException e){\n      e.printStackTrace();//视需求而定，可以删除\n      System.out.println(\"File not found\");//视需求而定，可以删除\n      System.exit(0);//必须保留，如果不保留需要在while-loop部分添加assert避免readFile为null的情况\n    }\n    \n    while(readFile.hasNext()){\n      String line = readFile.nextLine();\n      /*\n      \t...\n      */\n    }\n    \n    readFile.close();\n  }\n}\n```\n\n\n\n### Writefile\n\n此处对于writefile操作，介绍简单的FileWriter实现方式（并非唯一方式，也并非最优方式）\n\n首先引入FileWriter包和File包：\n\n```java\n//同上\nimport java.io.*;\n//只引用FileWriter包和File包，不推荐，但可行\nimport java.io.FileWriter;\nimport java.io.File;\n```\n\n创建File和FileWriter对象：\n\n```java\nFile file = new File(fileName);//同上，此处新建File对象是会自动创建新文件\nFileWriter output = new FileWriter(file);//类似上文提到的Scanner\n```\n\n写入内容：\n\n```java\n/*\n\t此处content为写入内容，自行定义，类型为string\n\t需要注意的是此处.write方法不自带换行，如果需要换行写入，记得在content后添加\"\\n\"\n*/\noutput.write(content);\n```\n\n在写入之后，记得要close FileWriter：\n\n```java\noutput.flush();//此为刷新缓冲，可以省略，具体功能请善用搜索\noutput.close();\n```\n\n此处处理Exception方式与上文类似但不相同，可以参照下面完整实例：\n\n```java\nimport java.io.*;\n\npublic class className throws IOException{\n  public void saveToFile(String fileName){\n    File file = new File(fileName);\n\t\tFileWriter output = new FileWriter(file);\n    \n    output.write(content);\n    /*\n    \t...\n    */\n    \n    output.flush();\n    output.close();\n  }\n}\n```\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n---\n\n","tags":["教程","java"],"categories":["java基础随笔"]},{"title":"为Blog添加图床","url":"/2021/04/03/blog-Image Hosting Service/","content":"\n\n\n图床是用来存放图片的服务器，将图片存在图床里，生存一个图片的url。可以减小Blog的体积，如果挂载CDN还可以增加Blog的加载速度。\n\n我是用的是[GitHub](http://www.github.com/)+[picGo](https://github.com/Molunerfinn/PicGo)方案：\n\n### 配置\n\n首先去GitHub新建一个repository，并在setting里获取token（记得保存，token只会生成一次）。\n\n下载并安装picGo，选择图床，复制repository和token进去。\n\n配置完成。\n\n### 使用\n\n选择上传图片到图床。\n\n上传完成后，picGo会生成图片链接，复制粘贴即可（picGo可以自动生成如markdown，html等格式）\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n---\n\n","tags":["教程"],"categories":["Blog相关"]},{"title":"如何在Chic主题的首页添加自定义图标","url":"/2021/04/03/cuctom_icon/","content":"\n### 下载代码\n\n- 从[阿里iconfont](https://www.iconfont.cn)搜索找到想要的图标\n\n- 选择将图标加入购物车\n\n- 点击购物车选择下载代码\n\n### 解压代码\n\n- 解压下载的压缩包\n\n- 首次链接，建议在`themes/Chic/source/fonts`里新建`/font_custom`，把解压好的压缩包扔在里面（也可以自定义文件夹名称，或者直接扔在`themes/Chic/source/fonts`里）\n\n### 修改文件\n\n- 在`themes/Chic/source/css/style.styl`里修改文件，在`//icon`下加入代码：\n\n  ```\n  //如果把压缩包扔在font_custom里\n  @import \"../fonts/font_custom/iconfont.css\"\n  //如果压缩包在fonts里\n  @import \"../fonts/iconfont.css\"\n  ```\n\n### 查找图标名\n\n- 打开压缩包里的`iconfont.css`查看图标名称\n\n### 添加内容\n\n- 打开`themes/Chic/_config.yml`中添加内容即可\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n---\n\n","tags":["教程"],"categories":["Blog相关"]},{"title":"近期折腾code-server的记录","url":"/2021/03/31/code-server/","content":"\n一年前就开始对nas这类的个人存储中心感兴趣，受限于当时正好在组装台式，预算不够，我个人又不是个很能将就的人，这个计划就暂时搁置了。现在想想其实挺后悔，一年前还在美国，网络比国内的大局域网好很多。\n\n最早我对nas的理解就是个外置硬盘，然后加上内网文件访问和共享。而这个功能对我来说，不是很有吸引力。这学期定在上海上课，每节课时间很久，课程选择也都是非专业课，我就想着找点东西摸摸鱼。因为笔记本是15寸的mbp，每次带出门都要背个大双肩背包，我就把整活的目光放到iPad上。我当时的想法就是在iPad上写代码。\n\n虽然arm构架的M1芯片的mbp已经上市，但iPad上还是没有可用的本地ide。插句题外话，有传言Xcode会移植到iPad OS上，如果属实，起码有一个可用的IDE，但我的日常平台还是VS code和Jetbrain，所以Xcode不是我的第一选择。而且既然Mac OS开始支持arm构架，iPad的A系列芯片性能也算不弱，未来可能有大神可以把Mac OS移植到iPad上。\n\n言归正传，我自然还是希望可以在iPad上使用VS code。想起来一年前有个大佬朋友跟我提过VS code官方出了一个网页的IDE版本，当时试用了一下，使用体验非常不好，但网页IDE提供了一个很好的思路。又去请教了那个大佬，得知了[code-server](https://github.com/cdr/code-server)的存在。\n\n在开始倒腾code-server前还走了个弯路。在网上查到了iPad上其实是可以安装虚拟机的，使用的软件是[UTM](https://getutm.app/)，可以安装老版本的Windows或者Linux发行版。问题是现在用UTM安装虚拟机的时候需要越狱环境。我捣鼓越狱最早可以追溯到iOS4的年代（iOS元年，在此之前叫iPhone OS 3）。因为现在移动支付高度发展，越狱会让设备变得不安全，我很早就放弃了越狱，所以这个方案被否决。\n\n之后就开始倒腾code-server。code-server是GitHub上的一个开源项目，可以快速部署个人的网页版IDE。因为我的想法是要远程访问code-server，考虑到我目前在上海租房，没有公网ip（未来把gen8搬回家也不一定就能搞到公网ip，很无语），于是开通了GitHub的[学生包](https://education.github.com/pack)，里面包含了[Digital Ocean](https://www.digitalocean.com/)的优惠券和[namecheap](https://www.namecheap.com/)的一年免费域名（.me）。这波白嫖实在快乐，我于是可以在do的云服务器上部署code-server，然后挂上免费域名进行远程访问。这样来看，这条路就走得通了。\n\n首先申请GitHub的student pack，在student pack的界面领取do和namecheap的优惠。之后用GitHub账号注册登陆do和namecheap。\n\n申请域名很简单，登陆进入namecheap，然后使用优惠券就好。\n\nDigital Ocean在登陆领取优惠之后，创建一个droplet。贴上我的配置作为参考，具体可以自己选：\n\n![](https://raw.githubusercontent.com/Robert1124/image/master/PicGo/code-server.jpg)\n\n因为do的优惠是$100的优惠券，为了白嫖的时间长一点，我只是选择了最基础并且够用的套餐。\n\n具体的部署方法可以参考GitHub上code-server的官方文档，说的很详细。这里我给出一些我部署时候遇到的问题，一些东西上我的选择，和我觉得可能需要注意的点：\n\n1. 建议在创建好的droplet上开启ssh，方便远程管理。可以直接使用terminal的ssh命令连接（配置key或者每次输入账号密码），或者使用软件托管，这里我选择的是[Termius](https://termius.com/)。全平台支持，而且自带SFTP，方便文件传输。如果是学生的话，Termius同样可以申请学生优惠，给官方发邮件可以白嫖一年，暂时不知道过期之后能不能再次申请。\n2. code-server上有很多种部署的方法，我选择用caddy把我的code-server挂到namecheap上。也可以用caddy设置多个用户，对应不同的登陆密码和文件访问权限。转发code-server到namecheap需要知道droplet的ip地址（在droplet的管理页面可以看），改写caddyfile，然后在namecheap的管理界面添加。\n3. 可以用SFTP传输文件或者直接扔到code-server上，但SFTP的速度快一点。\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n***","tags":["教程","code-server"],"categories":["折腾记录"]},{"title":"Hello World","url":"/2021/03/31/hello-world/","content":"This is Robert. \n\nWelcome to my blog.\n\nNice to meet you!\n\n&nbsp;&nbsp;\n\n&nbsp;&nbsp;\n\n***\n\n","tags":["talkings"],"categories":["talkings"]}]